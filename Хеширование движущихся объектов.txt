Хеширование движущихся объектов
Жексуан Сонг
Факультет информатики
Университет Мэриленда
Колледж Парк, Мэриленд 20742
zsong@cs.umd.edu

Ник Россопулос
Факультет информатики и Институт передовых компьютерных наук Университета Мэриленда
Колледж Парк, Мэриленд 20742
nick@cs.umd.edu

19 мая 2000 года

Аннотация

В реальной жизни объекты относятся как к пространству, так и ко времени. Объекты, меняющие свое положение в течение продолжительного времени, называются движущимися. С развитием беспроводной связи и технологий позиционирования становится необходимым хранить и индексировать такие объекты в базе данных. Ввиду сложности проблемы многие сугубо пространственные индексные структуры не способны индексировать большой объём движущихся объектов в базще данных.
В этой статье мы предлагаем абсолютно новую идею, основанную на методе хеширования. Так как стало возможным заново индексировать все объекты каждый период времени, мы размещаем их в "корзинах". Если объект перемещается в пределах корзины, база данных не меняется. Использование этой техники значительно снижает количество обновлений базы данных - процедура индексирования становится приемлемой для выполнения. Также мы расширяем структуру предыдущей системы, представляя фильтрующий слой между сборщиком информации о местоположении и базой данных. Кроме того, представлены четыре разных метода, основанных новой системе. С целью оценить различные аспекты наших индексных техник были проведены тесты производительности, и их итоги приведены в данной статье.

1. Введение
Традиционно, системы управления базой данных применяют "статичную" модель, предполагающую, что данные, размещённые в базе, остаются неизменными, пока не будут изменены явно через операцию обновления. Такая модель приемлема, если свойства обхектов меняются дискретно или не меняются вовсе. Однако, в реальной жизни множество объектов постоянно меняют свойства. Одно приложение предназначено для поддержки базы данных в системе контроля за воздушным движением. В этом случае в роли движущихся объектов выступают самолёты. Их положение постоянно изменяется. Одно из возможных решений для "статичной" модели мы назвали "наивным": обновлять информацию о положении объектов через определённый промежуток времени. Ввиду больших затрат на обновление это решение представляется неэффективным.
С развитием систем позиционирования таких как GPS, технологий беспроводной связи и электроники, стало технически возможно и необходимо отслеживать и записывать местоположение большого количества движущихся объектов. В соответствии с [SJL+99], рынок мобильных телефонов ожидает более чем 500 миллионов пользователей телефонов к 2002 году и миллиард к 2004, а мобильные телефоны станут беспроводными устройствами для доступа к интернету. Отслеживание положения таких устройств может существенно улучшить качество услуг связи. Появление более сложных систем баз данных становится крайне необходимо.
Новая база данных, которая работает с геометрическими изменениями во времени, называется пространственно-временной базой данных. Проблемы этой новой сферы привлекают внимание как академического, так и производственного сообществ. [WCD+98] представил модель Moving Objects Spatio-Temoporal (MOST) и язык  (FTL) для запроса текущего и будущего положения движущихся объектов; [TJ98] предлагает концептуальную компонентную модель для разработки пространственно-временных приложений; Нассименто в [NST99] представляет алгоритм GSTD ("Generate Spatio-Temporal Data" ("Генерирование пространственно-временных данных")), который генерирует множества движущихся точек или прямоугольников, следующих расширенному множеству распределений. Искуственно созданные алгоритмом GSTD данные используются для оценки различных методов индексирования. Система Arc View GIS [ArcV98] уже поддерживает отслеживание мобильных объектов и обработку связанных с ними запросов.
Эта статья сконцентрирована на методах индексирования большого числа перемещающихся объектов без необходимости частого обновления базы данных. Главным образом будет обсуждаться как быстро отвечать на различные запросы о текущем положении объекта, так как такие запросы представляют собой основную операцию для других запросов, таких как  запросы ближайших соседей [CG99, SK98]. Так как ответ основан на текущей информации, расположенной в базе, нужно, чтобы эта информация была как можно точнее. Основная задача - избежать недопустимо больших накладных расходов на обновление.
"Наивное решение" отказывает с ростом количества движущихся объектов. Допустим, система управления базой данных может справиться с Nt операциями в секунду (в большинстве случаев Nt менее 1000). Число объектов - No. Через каждый промежуток времени информация о положении требует обновления. Таким образом, требуется No операций обновления на каждый период. Это займёт по меньшей мере No/Nt секунд. Если No невелико, например, несколько тысяч в случае с управлением воздушным движением, "наивное решение" довольно не плохо. Однако, если No велико, к примеру, несколько миллионов для отслеживания движения автомобилей или даже больше, в случае с мобильной связью, каждое обновление требует десятков минут и более. Это значит, что позиционная информация объекта, размещённая в базе данных, может устареть на десять минут и более! Результат запроса таких данных представляется неприемлемым.
Альтернативный подход [KGT99, SJL+99] - это представление позиции перемещающихся объектов в виде функции от времени f(t) и обновление базы данных только тогда, когда параметры этой функции изменились. В большинстве случаев используются линейные функции ввиду своей простоты. В любое данное время to можно найти положение каждого объекта путём вычисления функции f(to). Такой подход также может прогнозировать будущее положение объектов. Он может хорошо сработать на каких-либо научных базах данных, где путь каждого объекта известен заранее. Однако, в реальной жизни очень сложно найти функцию, описывающую активность объектов. Или же параметры f должны меняться очень часто. Например, мы решили использовать линейную функцию для описания активности пользователя мобильного телефона. Каждый раз когда он меняет направление или скорость движения, создаётся запрос обновления базы данных.  Такие изменения могут происходить постоянно. Так что этот метод по-прежнему требует слишком много обновлений базы данных. Ещё один недостаток заключается в том, что после некоторого количества обновлений параметров требуется произвести достаточно сложные вычисления, чтобы найти текущее положение каждого объекта. Это значительно ухудшит эфективность процедуры запроса.

Наш вклад в этой статье включает в себя следующее:

- Мы предлагаем новую идею, основанную на технике хешировния. Каждый объект помещён в "корзину". Только лишь когда объект переходит в новую корзину, база данных производит обновление. Эта техника существенно уменьшает число обновлений базы данных, что позволяет системе хранить и индексировать большое количество перемещающихся объектов. 
- Мы представляем новую структуру системы. Между сборщиком информации о положении и базой данных мы добавили новую прослойку и назвали её "позиционная пред-исполнительная часть". Эта прослойка может фильтровать  большинство запросов обновления базы данных, основываясь на правилах, опредедённых в начале.
- Мы выделяем четыре различных метода. Первый разделяет пространство на маленькие "корзины". Второй допускает пересечения корзин, это снижает количество обновлений базы данных, сформированных зигзагообразными движениями объектов. Третий метод позволяет динамическое обновление корзин, это повышает эффективность размещения при неравномерном распределении объектов. И последний, четвёртый, метод совмещает в себе лучшие стороны второго и третьего методов. В экспериментальном разделе мы также приводим некоторые рекомендации по по выбору метода.

Во второй части обсуждается соответствующая работа в области пространственно-временной базы данных. Затем, в третьей части, мы излагаем основную идею наших методов, а также новую систему структур данных, необходимых для воплощения идеи. В следующей части мы представляем четыре особых метода. Результаты экспериментов приведены в части 5, а последняя часть содержит выводы и направления дальнейших исследований.

2. Связанная работа
В последнее время была проделана большая работа по индексированию положения движущихся объектов. Эти работы по большей части сконцентрированы на точечных данных. Связанная работа может быть разделена на две категории в зависимости от информации, размещённой в базе данных.
Первый подход подразумевает размещение информации о положении перемещающихся объектов, полученной путём периодичной выборки. Движение объектов между двумя позициями выборки описывается с использованием интерполяции. Интерполяция может быть как линейной, являющийся простейшей, так и полиномиальной сплайновой [BBB87]. Затем движение одного объекта в d-мерном пространстве описывается как страектория в (d+1)-мерном пространстве, включающем время. [TUW98]. Методы, соответствующие этому подходу главным образом сфокусированы на индексировании траекторий.